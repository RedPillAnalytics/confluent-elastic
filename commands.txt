less db-insert.sh

mysql code

describe orders;
select * from orders limit 42;
insert into orders (product, price, user_id) values ('lumpy', 100, 42);

cat /usr/local/bin/start-maxwell.sh

/maxwell-1.12.0/bin/maxwell --user='maxwell' --password='maxwell' --host='127.0.0.1' --producer=stdout

./datagen-init.sh

kafka-topics --zookeeper localhost:2181 --list

ksql-cli remote http://localhost:8080

run script '/usr/share/doc/ksql-clickstream-demo/clickstream-schema.sql';

list topics;
list streams;
list tables;


create stream orders_raw (data map(varchar, varchar)) with (kafka_topic = 'maxwell_code_orders', value_format = 'JSON');

create stream orders_flat as select data['id'] as id, data['product'] as product, data['price'] as price, data['user_id'] as user_id from orders_raw;

create stream orders as select cast(id as integer) as id, product, cast(price as bigint) as price, cast(user_id as integer) as user_id from orders_flat;

select product, count(*), sum(price) from orders window tumbling (size 15 seconds) group by product;

-- now the aggregating table
create table orders_per_min as select product, sum(price) amount from orders window hopping (size 60 seconds, advance by 15 seconds) group by product;

-- and enrich that with the event timestamp
CREATE TABLE orders_per_min_ts as select rowTime as event_ts, * from orders_per_min;

cd /usr/share/doc/ksql-clickstream-demo/

./orders-to-grafana.sh

./clickstream-analysis-dashboard.sh
cp dashboard.json clickstream-analysis-dashboard.json
./clickstream-analysis-dashboard.sh